# -*- coding: utf-8 -*-
"""cats-vs-dogs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JJLu32kmv05YRYeRZPD0QPQdofmF0iqn
"""

import os

parent_dir = '/content/drive/MyDrive/DL/dogs-vs-cats'
if not (os.getcwd() == parent_dir):
  os.chdir(parent_dir)

train_dir = os.path.join(parent_dir, 'train')
valid_dir = os.path.join(parent_dir, 'valid')
test_dir = os.path.join(parent_dir, 'test')

from keras import layers
from keras import models

model = models.Sequential()

model.add(layers.Conv2D(32, (3,3), activation='relu', input_shape=(150, 150, 3)))
model.add(layers.MaxPooling2D((2,2)))
model.add(layers.Conv2D(64, (3,3), activation='relu'))
model.add(layers.MaxPooling2D((2,2)))
model.add(layers.Conv2D(128, (3,3), activation='relu'))
model.add(layers.MaxPool2D((2,2)))
model.add(layers.Conv2D(128, (3,3), activation='relu'))
model.add(layers.MaxPooling2D((2,2)))

model.add(layers.Dropout(0.5))
model.add(layers.Flatten())
model.add(layers.Dense(512, activation='relu'))
model.add(layers.Dense(1, activation='sigmoid'))

model.summary()

from keras import optimizers
model.compile(loss='binary_crossentropy', optimizer=optimizers.RMSprop(learning_rate=1e-4), metrics=['acc'])

from keras.preprocessing.image import ImageDataGenerator

train_data = ImageDataGenerator(
    rotation_range=40,
    width_shift_range=0.2,
    height_shift_range=0.2,
    shear_range=0.2,
    zoom_range=0.2,
    horizontal_flip=True,
    fill_mode='nearest',
    rescale=1./255)
valid_data = ImageDataGenerator(rescale=1./255)


train_generator = train_data.flow_from_directory(
    train_dir,
    target_size=(150, 150),
    batch_size=20,
    class_mode='binary'
)
valid_generator = valid_data.flow_from_directory(
    valid_dir,
    target_size=(150,150),
    batch_size=20,
    class_mode='binary'
)

history = model.fit(
    train_generator,
    steps_per_epoch=100,
    epochs=30,
    validation_data=valid_generator,
    validation_steps=50
)
model.save('cats_vs_dogs.h5')

history.history.keys()

import matplotlib.pyplot as plt

acc = history.history['acc']
loss = history.history['loss']
val_acc = history.history['val_acc']
val_loss = history.history['val_loss']

epochs = range(1, len(acc)+1)


plt.plot(epochs, acc)
plt.plot(epochs, val_acc)

from keras import models
model_trained = models.load_model('cats_vs_dogs.h5')
model_trained.summary()

os.chdir(test_dir)
names = os.listdir()

names[1]

import cv2

img = cv2.imread(names[1])
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
img = cv2.resize(img, (150,150))
plt.imshow(img)

img.shape

img = img/255.

img

model_trained.predict(img.reshape(1,150,150,3))

